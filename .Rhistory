labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (% of land area)",
y = "Forest Areas (sq. km)",
fill = "Population Density")
hex_plot
world_map_plot
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_violin(mapping = aes(x = forest_area_percentage, y = forest_area_land,
fill = bins, color = pop_2016)) +
scale_color_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (% of land area)",
y = "Forest Areas (sq. km)",
fill = "Population Density")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_violin(mapping = aes(x = Country.Code, y = forest_area_land,
fill = bins, color = pop_2016)) +
scale_color_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (% of land area)",
y = "Forest Areas (sq. km)",
fill = "Population Density")
hex_plot
country <- c("China", "USA")
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_violin(mapping = aes(x = country, y = forest_area_land,
fill = bins, color = pop_2016)) +
scale_color_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (% of land area)",
y = "Forest Areas (sq. km)",
fill = "Population Density")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_violin(mapping = aes(x = forest_area_land, y = forest_area_percentage,
fill = bins, color = pop_2016)) +
scale_color_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (% of land area)",
y = "Forest Areas (sq. km)",
fill = "Population Density")
hex_plot
### Section 2: Map Visualization
# create data frame specific to percentage of forested areas
percentage_df <- forest_data %>%
filter(Series.Code == "AG.LND.FRST.ZS") %>%
rename(region = Country.Name)
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_land, y = forest_area_percentage,
fill = bins, color = pop_2016)) +
scale_color_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (% of land area)",
y = "Forest Areas (sq. km)",
fill = "Population Density")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_land, y = forest_area_percentage,
fill = pop_2016, color = bins)) +
scale_color_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (% of land area)",
y = "Forest Areas (sq. km)",
fill = "Population Density")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_land, y = forest_area_percentage,
color = pop_2016)) +
scale_color_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (% of land area)",
y = "Forest Areas (sq. km)",
fill = "Population Density")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = forest_area_land,
color = pop_2016)) +
scale_color_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (% of land area)",
y = "Forest Areas (sq. km)",
fill = "Population Density")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = forest_area_land,
)) +
scale_color_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (% of land area)",
y = "Forest Areas (sq. km)",
fill = "Population Density")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016,
)) +
scale_color_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (% of land area)",
y = "Forest Areas (sq. km)",
fill = "Number of Countries")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_point(mapping = aes(x = forest_area_percentage, y = pop_2016,
)) +
scale_color_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (% of land area)",
y = "Forest Areas (sq. km)",
fill = "Number of Countries")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016,
)) +
scale_color_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (% of land area)",
y = "Forest Areas (sq. km)",
fill = "Number of Countries")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016,
)) +
ylim(0,500000000) +
scale_color_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (% of land area)",
y = "Forest Areas (sq. km)",
fill = "Number of Countries")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016,
)) +
ylim(0,400000000) +
scale_color_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (% of land area)",
y = "Forest Areas (sq. km)",
fill = "Number of Countries")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016,
)) +
ylim(0, 400000000) +
scale_color_brewer(palette = "PuRd") +
# labs(title = "Total Population and Forestation in 2016",
#      x = "Forest Areas (% of land area)",
#      y = "Forest Areas (sq. km)",
#      fill = "Number of Countries")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016,
)) +
ylim(0, 400000000) +
scale_color_brewer(palette = "PuRd")
# labs(title = "Total Population and Forestation in 2016",
#      x = "Forest Areas (% of land area)",
#      y = "Forest Areas (sq. km)",
#      fill = "Number of Countries")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016,
)) +
ylim(0, 400000000) +
scale_color_brewer(palette = "PuRd")
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population",
fill = "Number of Countries")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016,
)) +
ylim(0, 400000000) +
scale_fill_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population",
fill = "Number of Countries")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016)) +
ylim(0, 400000000) +
scale_fill_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population",
fill = "Number of Countries")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016)) +
ylim(0, 400000000) +
scale_fill_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population",
fill = "Number of Countries")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_point(mapping = aes(x = forest_area_percentage, y = pop_2016)) +
ylim(0, 400000000) +
scale_fill_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population",
fill = "Number of Countries")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016)) +
ylim(0, 400000000) +
scale_fill_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population",
fill = "Number of Countries")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_land, y = pop_2016)) +
ylim(0, 400000000) +
scale_fill_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population",
fill = "Number of Countries")
hex_plot
# join data frames and remove countries with both NAs
join_pop_data <- left_join(dup_pop, new_dup_pop, by = c("Country.Code",
"pop_2016"))
join_pop_data <- na.omit(join_pop_data)
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016)) +
ylim(0, 400000000) +
scale_fill_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population",
fill = "Number of Countries")
hex_plot
scale_y_continuous(limits = c(0, 400000000) +
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016)) +
scale_y_continuous(limits = c(0, 400000000)) +
scale_fill_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population",
fill = "Number of Countries")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016)) +
scale_y_continuous(limits = c(0, 400000000)) +
scale_fill_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population")
hex_plot
# join data frames and remove countries with both NAs
join_pop_data <- left_join(dup_pop, new_dup_pop, by = c("Country.Code",
"pop_2016"))
join_pop_data <- na.omit(join_pop_data)
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016)) +
ylim(0, 400000000) +
scale_fill_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016)) +
ylim(0, 400000000) +
scale_fill_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population")
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016)) +
ylim(0, 400000000) +
scale_color_brewer(palette = "PuRd") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016)) +
ylim(0, 400000000) +
scale_color_brewer(palette = "Set1") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016)) +
ylim(0, 400000000) +
scale_color_brewer(palette = "RdPu") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016)) +
ylim(0, 400000000) +
scale_color_brewer(palette = RdPu) +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016,
color = "white")) +
ylim(0, 400000000) +
scale_color_brewer(palette = "RdPu") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016,
color = Country.Code)) +
ylim(0, 400000000) +
scale_color_brewer(palette = "RdPu") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016,
color = Land)) +
ylim(0, 400000000) +
scale_color_brewer(palette = "RdPu") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016)) +
ylim(0, 400000000) +
scale_color_brewer(palette = "RdPu") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016, color "red")) +
ylim(0, 400000000) +
scale_color_brewer(palette = "RdPu") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016, color "red")) +
ylim(0, 400000000) +
scale_color_brewer(palette = "RdPu") +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016)) +
ylim(0, 400000000) +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population")
hex_plot
# plots hexbin map of all countries in 2016, color representing population.
# x-axis represents the percentage of forest area in each country and y-axis
# represents the amount of square kilometers.
hex_plot <- ggplot(data = join_pop_data) +
geom_hex(mapping = aes(x = forest_area_percentage, y = pop_2016)) +
ylim(0, 400000000) +
labs(title = "Total Population and Forestation in 2016",
x = "Forest Areas (%)",
y = "Population",
fill = "Number of Countries")
hex_plot
unemployment <- read.csv('data/API_SL.UEM.TOTL.ZS_DS2_en_csv_v2_10473697.csv', stringsAsFactors = FALSE)
setwd("~/INFO201/final-project")
unemployment <- read.csv('data/API_SL.UEM.TOTL.ZS_DS2_en_csv_v2_10473697.csv', stringsAsFactors = FALSE)
View(unemployment)
unemployment <- unemployment %>%
select(Country.Name, Country.Code, X2016)
unemployment <- read.csv('data/API_SL.UEM.TOTL.ZS_DS2_en_csv_v2_10473697.csv', stringsAsFactors = FALSE)
unemployment <- unemployment %>%
select(Country.Name, Country.Code, X2016)
library("dplyr")
library("tidyr")
library("shiny")
unemployment <- read.csv('data/API_SL.UEM.TOTL.ZS_DS2_en_csv_v2_10473697.csv', stringsAsFactors = FALSE)
unemployment <- unemployment %>%
select(Country.Name, Country.Code, X2016)
View(unemployment)
happiness <- read.csv('data/2016.csv', stringsAsFactors = FALSE)
View(happiness)
